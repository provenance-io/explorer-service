// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nav_event.proto

package io.provlabs.flow.api;

/**
 * <pre>
 * NavEventRequest represents a request for NavEvents by either `denom` or `scope_id`.
 * One of `denom` or `scope_id` must be provided; the other fields are optional.
 * </pre>
 *
 * Protobuf type {@code nav.NavEventRequest}
 */
public final class NavEventRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nav.NavEventRequest)
    NavEventRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use NavEventRequest.newBuilder() to construct.
  private NavEventRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NavEventRequest() {
    denom_ = "";
    scopeId_ = "";
    priceDenoms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    fromDate_ = "";
    toDate_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new NavEventRequest();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private NavEventRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            denom_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            scopeId_ = s;
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              priceDenoms_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            priceDenoms_.add(s);
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            fromDate_ = s;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            toDate_ = s;
            break;
          }
          case 50: {
            io.provlabs.flow.api.PaginationRequest.Builder subBuilder = null;
            if (pagination_ != null) {
              subBuilder = pagination_.toBuilder();
            }
            pagination_ = input.readMessage(io.provlabs.flow.api.PaginationRequest.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(pagination_);
              pagination_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        priceDenoms_ = priceDenoms_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEventRequest_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEventRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.provlabs.flow.api.NavEventRequest.class, io.provlabs.flow.api.NavEventRequest.Builder.class);
  }

  public static final int DENOM_FIELD_NUMBER = 1;
  private volatile java.lang.Object denom_;
  /**
   * <pre>
   * The token denomination to filter events by. Either `denom` or `scope_id` is required.
   * </pre>
   *
   * <code>string denom = 1;</code>
   * @return The denom.
   */
  @java.lang.Override
  public java.lang.String getDenom() {
    java.lang.Object ref = denom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      denom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The token denomination to filter events by. Either `denom` or `scope_id` is required.
   * </pre>
   *
   * <code>string denom = 1;</code>
   * @return The bytes for denom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDenomBytes() {
    java.lang.Object ref = denom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      denom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCOPE_ID_FIELD_NUMBER = 2;
  private volatile java.lang.Object scopeId_;
  /**
   * <pre>
   * The scope ID to filter events by. Either `denom` or `scope_id` is required.
   * </pre>
   *
   * <code>string scope_id = 2;</code>
   * @return The scopeId.
   */
  @java.lang.Override
  public java.lang.String getScopeId() {
    java.lang.Object ref = scopeId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      scopeId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The scope ID to filter events by. Either `denom` or `scope_id` is required.
   * </pre>
   *
   * <code>string scope_id = 2;</code>
   * @return The bytes for scopeId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getScopeIdBytes() {
    java.lang.Object ref = scopeId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      scopeId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRICE_DENOMS_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList priceDenoms_;
  /**
   * <pre>
   * Optional. A list of price denominations to filter by.
   * </pre>
   *
   * <code>repeated string price_denoms = 3;</code>
   * @return A list containing the priceDenoms.
   */
  public com.google.protobuf.ProtocolStringList
      getPriceDenomsList() {
    return priceDenoms_;
  }
  /**
   * <pre>
   * Optional. A list of price denominations to filter by.
   * </pre>
   *
   * <code>repeated string price_denoms = 3;</code>
   * @return The count of priceDenoms.
   */
  public int getPriceDenomsCount() {
    return priceDenoms_.size();
  }
  /**
   * <pre>
   * Optional. A list of price denominations to filter by.
   * </pre>
   *
   * <code>repeated string price_denoms = 3;</code>
   * @param index The index of the element to return.
   * @return The priceDenoms at the given index.
   */
  public java.lang.String getPriceDenoms(int index) {
    return priceDenoms_.get(index);
  }
  /**
   * <pre>
   * Optional. A list of price denominations to filter by.
   * </pre>
   *
   * <code>repeated string price_denoms = 3;</code>
   * @param index The index of the value to return.
   * @return The bytes of the priceDenoms at the given index.
   */
  public com.google.protobuf.ByteString
      getPriceDenomsBytes(int index) {
    return priceDenoms_.getByteString(index);
  }

  public static final int FROM_DATE_FIELD_NUMBER = 4;
  private volatile java.lang.Object fromDate_;
  /**
   * <pre>
   * Optional. The start date (in string format) to filter events.
   * </pre>
   *
   * <code>string from_date = 4;</code>
   * @return The fromDate.
   */
  @java.lang.Override
  public java.lang.String getFromDate() {
    java.lang.Object ref = fromDate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      fromDate_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional. The start date (in string format) to filter events.
   * </pre>
   *
   * <code>string from_date = 4;</code>
   * @return The bytes for fromDate.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getFromDateBytes() {
    java.lang.Object ref = fromDate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      fromDate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int TO_DATE_FIELD_NUMBER = 5;
  private volatile java.lang.Object toDate_;
  /**
   * <pre>
   * Optional. The end date (in string format) to filter events.
   * </pre>
   *
   * <code>string to_date = 5;</code>
   * @return The toDate.
   */
  @java.lang.Override
  public java.lang.String getToDate() {
    java.lang.Object ref = toDate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      toDate_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Optional. The end date (in string format) to filter events.
   * </pre>
   *
   * <code>string to_date = 5;</code>
   * @return The bytes for toDate.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getToDateBytes() {
    java.lang.Object ref = toDate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      toDate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAGINATION_FIELD_NUMBER = 6;
  private io.provlabs.flow.api.PaginationRequest pagination_;
  /**
   * <pre>
   * Pagination details for the request
   * </pre>
   *
   * <code>.nav.PaginationRequest pagination = 6;</code>
   * @return Whether the pagination field is set.
   */
  @java.lang.Override
  public boolean hasPagination() {
    return pagination_ != null;
  }
  /**
   * <pre>
   * Pagination details for the request
   * </pre>
   *
   * <code>.nav.PaginationRequest pagination = 6;</code>
   * @return The pagination.
   */
  @java.lang.Override
  public io.provlabs.flow.api.PaginationRequest getPagination() {
    return pagination_ == null ? io.provlabs.flow.api.PaginationRequest.getDefaultInstance() : pagination_;
  }
  /**
   * <pre>
   * Pagination details for the request
   * </pre>
   *
   * <code>.nav.PaginationRequest pagination = 6;</code>
   */
  @java.lang.Override
  public io.provlabs.flow.api.PaginationRequestOrBuilder getPaginationOrBuilder() {
    return getPagination();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getDenomBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, denom_);
    }
    if (!getScopeIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, scopeId_);
    }
    for (int i = 0; i < priceDenoms_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, priceDenoms_.getRaw(i));
    }
    if (!getFromDateBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, fromDate_);
    }
    if (!getToDateBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, toDate_);
    }
    if (pagination_ != null) {
      output.writeMessage(6, getPagination());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getDenomBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, denom_);
    }
    if (!getScopeIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, scopeId_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < priceDenoms_.size(); i++) {
        dataSize += computeStringSizeNoTag(priceDenoms_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getPriceDenomsList().size();
    }
    if (!getFromDateBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, fromDate_);
    }
    if (!getToDateBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, toDate_);
    }
    if (pagination_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, getPagination());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.provlabs.flow.api.NavEventRequest)) {
      return super.equals(obj);
    }
    io.provlabs.flow.api.NavEventRequest other = (io.provlabs.flow.api.NavEventRequest) obj;

    if (!getDenom()
        .equals(other.getDenom())) return false;
    if (!getScopeId()
        .equals(other.getScopeId())) return false;
    if (!getPriceDenomsList()
        .equals(other.getPriceDenomsList())) return false;
    if (!getFromDate()
        .equals(other.getFromDate())) return false;
    if (!getToDate()
        .equals(other.getToDate())) return false;
    if (hasPagination() != other.hasPagination()) return false;
    if (hasPagination()) {
      if (!getPagination()
          .equals(other.getPagination())) return false;
    }
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getDenom().hashCode();
    hash = (37 * hash) + SCOPE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getScopeId().hashCode();
    if (getPriceDenomsCount() > 0) {
      hash = (37 * hash) + PRICE_DENOMS_FIELD_NUMBER;
      hash = (53 * hash) + getPriceDenomsList().hashCode();
    }
    hash = (37 * hash) + FROM_DATE_FIELD_NUMBER;
    hash = (53 * hash) + getFromDate().hashCode();
    hash = (37 * hash) + TO_DATE_FIELD_NUMBER;
    hash = (53 * hash) + getToDate().hashCode();
    if (hasPagination()) {
      hash = (37 * hash) + PAGINATION_FIELD_NUMBER;
      hash = (53 * hash) + getPagination().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.provlabs.flow.api.NavEventRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEventRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.provlabs.flow.api.NavEventRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.provlabs.flow.api.NavEventRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.provlabs.flow.api.NavEventRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * NavEventRequest represents a request for NavEvents by either `denom` or `scope_id`.
   * One of `denom` or `scope_id` must be provided; the other fields are optional.
   * </pre>
   *
   * Protobuf type {@code nav.NavEventRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nav.NavEventRequest)
      io.provlabs.flow.api.NavEventRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEventRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEventRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.provlabs.flow.api.NavEventRequest.class, io.provlabs.flow.api.NavEventRequest.Builder.class);
    }

    // Construct using io.provlabs.flow.api.NavEventRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      denom_ = "";

      scopeId_ = "";

      priceDenoms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      fromDate_ = "";

      toDate_ = "";

      if (paginationBuilder_ == null) {
        pagination_ = null;
      } else {
        pagination_ = null;
        paginationBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEventRequest_descriptor;
    }

    @java.lang.Override
    public io.provlabs.flow.api.NavEventRequest getDefaultInstanceForType() {
      return io.provlabs.flow.api.NavEventRequest.getDefaultInstance();
    }

    @java.lang.Override
    public io.provlabs.flow.api.NavEventRequest build() {
      io.provlabs.flow.api.NavEventRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.provlabs.flow.api.NavEventRequest buildPartial() {
      io.provlabs.flow.api.NavEventRequest result = new io.provlabs.flow.api.NavEventRequest(this);
      int from_bitField0_ = bitField0_;
      result.denom_ = denom_;
      result.scopeId_ = scopeId_;
      if (((bitField0_ & 0x00000001) != 0)) {
        priceDenoms_ = priceDenoms_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.priceDenoms_ = priceDenoms_;
      result.fromDate_ = fromDate_;
      result.toDate_ = toDate_;
      if (paginationBuilder_ == null) {
        result.pagination_ = pagination_;
      } else {
        result.pagination_ = paginationBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.provlabs.flow.api.NavEventRequest) {
        return mergeFrom((io.provlabs.flow.api.NavEventRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.provlabs.flow.api.NavEventRequest other) {
      if (other == io.provlabs.flow.api.NavEventRequest.getDefaultInstance()) return this;
      if (!other.getDenom().isEmpty()) {
        denom_ = other.denom_;
        onChanged();
      }
      if (!other.getScopeId().isEmpty()) {
        scopeId_ = other.scopeId_;
        onChanged();
      }
      if (!other.priceDenoms_.isEmpty()) {
        if (priceDenoms_.isEmpty()) {
          priceDenoms_ = other.priceDenoms_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensurePriceDenomsIsMutable();
          priceDenoms_.addAll(other.priceDenoms_);
        }
        onChanged();
      }
      if (!other.getFromDate().isEmpty()) {
        fromDate_ = other.fromDate_;
        onChanged();
      }
      if (!other.getToDate().isEmpty()) {
        toDate_ = other.toDate_;
        onChanged();
      }
      if (other.hasPagination()) {
        mergePagination(other.getPagination());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.provlabs.flow.api.NavEventRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.provlabs.flow.api.NavEventRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object denom_ = "";
    /**
     * <pre>
     * The token denomination to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string denom = 1;</code>
     * @return The denom.
     */
    public java.lang.String getDenom() {
      java.lang.Object ref = denom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        denom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The token denomination to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string denom = 1;</code>
     * @return The bytes for denom.
     */
    public com.google.protobuf.ByteString
        getDenomBytes() {
      java.lang.Object ref = denom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        denom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The token denomination to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string denom = 1;</code>
     * @param value The denom to set.
     * @return This builder for chaining.
     */
    public Builder setDenom(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      denom_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The token denomination to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string denom = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDenom() {
      
      denom_ = getDefaultInstance().getDenom();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The token denomination to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string denom = 1;</code>
     * @param value The bytes for denom to set.
     * @return This builder for chaining.
     */
    public Builder setDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      denom_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object scopeId_ = "";
    /**
     * <pre>
     * The scope ID to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string scope_id = 2;</code>
     * @return The scopeId.
     */
    public java.lang.String getScopeId() {
      java.lang.Object ref = scopeId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        scopeId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The scope ID to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string scope_id = 2;</code>
     * @return The bytes for scopeId.
     */
    public com.google.protobuf.ByteString
        getScopeIdBytes() {
      java.lang.Object ref = scopeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scopeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The scope ID to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string scope_id = 2;</code>
     * @param value The scopeId to set.
     * @return This builder for chaining.
     */
    public Builder setScopeId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      scopeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The scope ID to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string scope_id = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearScopeId() {
      
      scopeId_ = getDefaultInstance().getScopeId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The scope ID to filter events by. Either `denom` or `scope_id` is required.
     * </pre>
     *
     * <code>string scope_id = 2;</code>
     * @param value The bytes for scopeId to set.
     * @return This builder for chaining.
     */
    public Builder setScopeIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      scopeId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList priceDenoms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensurePriceDenomsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        priceDenoms_ = new com.google.protobuf.LazyStringArrayList(priceDenoms_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @return A list containing the priceDenoms.
     */
    public com.google.protobuf.ProtocolStringList
        getPriceDenomsList() {
      return priceDenoms_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @return The count of priceDenoms.
     */
    public int getPriceDenomsCount() {
      return priceDenoms_.size();
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @param index The index of the element to return.
     * @return The priceDenoms at the given index.
     */
    public java.lang.String getPriceDenoms(int index) {
      return priceDenoms_.get(index);
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the priceDenoms at the given index.
     */
    public com.google.protobuf.ByteString
        getPriceDenomsBytes(int index) {
      return priceDenoms_.getByteString(index);
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @param index The index to set the value at.
     * @param value The priceDenoms to set.
     * @return This builder for chaining.
     */
    public Builder setPriceDenoms(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePriceDenomsIsMutable();
      priceDenoms_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @param value The priceDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addPriceDenoms(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensurePriceDenomsIsMutable();
      priceDenoms_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @param values The priceDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addAllPriceDenoms(
        java.lang.Iterable<java.lang.String> values) {
      ensurePriceDenomsIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, priceDenoms_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPriceDenoms() {
      priceDenoms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. A list of price denominations to filter by.
     * </pre>
     *
     * <code>repeated string price_denoms = 3;</code>
     * @param value The bytes of the priceDenoms to add.
     * @return This builder for chaining.
     */
    public Builder addPriceDenomsBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensurePriceDenomsIsMutable();
      priceDenoms_.add(value);
      onChanged();
      return this;
    }

    private java.lang.Object fromDate_ = "";
    /**
     * <pre>
     * Optional. The start date (in string format) to filter events.
     * </pre>
     *
     * <code>string from_date = 4;</code>
     * @return The fromDate.
     */
    public java.lang.String getFromDate() {
      java.lang.Object ref = fromDate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        fromDate_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional. The start date (in string format) to filter events.
     * </pre>
     *
     * <code>string from_date = 4;</code>
     * @return The bytes for fromDate.
     */
    public com.google.protobuf.ByteString
        getFromDateBytes() {
      java.lang.Object ref = fromDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fromDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional. The start date (in string format) to filter events.
     * </pre>
     *
     * <code>string from_date = 4;</code>
     * @param value The fromDate to set.
     * @return This builder for chaining.
     */
    public Builder setFromDate(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      fromDate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The start date (in string format) to filter events.
     * </pre>
     *
     * <code>string from_date = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearFromDate() {
      
      fromDate_ = getDefaultInstance().getFromDate();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The start date (in string format) to filter events.
     * </pre>
     *
     * <code>string from_date = 4;</code>
     * @param value The bytes for fromDate to set.
     * @return This builder for chaining.
     */
    public Builder setFromDateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      fromDate_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object toDate_ = "";
    /**
     * <pre>
     * Optional. The end date (in string format) to filter events.
     * </pre>
     *
     * <code>string to_date = 5;</code>
     * @return The toDate.
     */
    public java.lang.String getToDate() {
      java.lang.Object ref = toDate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        toDate_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Optional. The end date (in string format) to filter events.
     * </pre>
     *
     * <code>string to_date = 5;</code>
     * @return The bytes for toDate.
     */
    public com.google.protobuf.ByteString
        getToDateBytes() {
      java.lang.Object ref = toDate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        toDate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Optional. The end date (in string format) to filter events.
     * </pre>
     *
     * <code>string to_date = 5;</code>
     * @param value The toDate to set.
     * @return This builder for chaining.
     */
    public Builder setToDate(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      toDate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The end date (in string format) to filter events.
     * </pre>
     *
     * <code>string to_date = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearToDate() {
      
      toDate_ = getDefaultInstance().getToDate();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Optional. The end date (in string format) to filter events.
     * </pre>
     *
     * <code>string to_date = 5;</code>
     * @param value The bytes for toDate to set.
     * @return This builder for chaining.
     */
    public Builder setToDateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      toDate_ = value;
      onChanged();
      return this;
    }

    private io.provlabs.flow.api.PaginationRequest pagination_;
    private com.google.protobuf.SingleFieldBuilderV3<
        io.provlabs.flow.api.PaginationRequest, io.provlabs.flow.api.PaginationRequest.Builder, io.provlabs.flow.api.PaginationRequestOrBuilder> paginationBuilder_;
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     * @return Whether the pagination field is set.
     */
    public boolean hasPagination() {
      return paginationBuilder_ != null || pagination_ != null;
    }
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     * @return The pagination.
     */
    public io.provlabs.flow.api.PaginationRequest getPagination() {
      if (paginationBuilder_ == null) {
        return pagination_ == null ? io.provlabs.flow.api.PaginationRequest.getDefaultInstance() : pagination_;
      } else {
        return paginationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     */
    public Builder setPagination(io.provlabs.flow.api.PaginationRequest value) {
      if (paginationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        pagination_ = value;
        onChanged();
      } else {
        paginationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     */
    public Builder setPagination(
        io.provlabs.flow.api.PaginationRequest.Builder builderForValue) {
      if (paginationBuilder_ == null) {
        pagination_ = builderForValue.build();
        onChanged();
      } else {
        paginationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     */
    public Builder mergePagination(io.provlabs.flow.api.PaginationRequest value) {
      if (paginationBuilder_ == null) {
        if (pagination_ != null) {
          pagination_ =
            io.provlabs.flow.api.PaginationRequest.newBuilder(pagination_).mergeFrom(value).buildPartial();
        } else {
          pagination_ = value;
        }
        onChanged();
      } else {
        paginationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     */
    public Builder clearPagination() {
      if (paginationBuilder_ == null) {
        pagination_ = null;
        onChanged();
      } else {
        pagination_ = null;
        paginationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     */
    public io.provlabs.flow.api.PaginationRequest.Builder getPaginationBuilder() {
      
      onChanged();
      return getPaginationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     */
    public io.provlabs.flow.api.PaginationRequestOrBuilder getPaginationOrBuilder() {
      if (paginationBuilder_ != null) {
        return paginationBuilder_.getMessageOrBuilder();
      } else {
        return pagination_ == null ?
            io.provlabs.flow.api.PaginationRequest.getDefaultInstance() : pagination_;
      }
    }
    /**
     * <pre>
     * Pagination details for the request
     * </pre>
     *
     * <code>.nav.PaginationRequest pagination = 6;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        io.provlabs.flow.api.PaginationRequest, io.provlabs.flow.api.PaginationRequest.Builder, io.provlabs.flow.api.PaginationRequestOrBuilder> 
        getPaginationFieldBuilder() {
      if (paginationBuilder_ == null) {
        paginationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            io.provlabs.flow.api.PaginationRequest, io.provlabs.flow.api.PaginationRequest.Builder, io.provlabs.flow.api.PaginationRequestOrBuilder>(
                getPagination(),
                getParentForChildren(),
                isClean());
        pagination_ = null;
      }
      return paginationBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:nav.NavEventRequest)
  }

  // @@protoc_insertion_point(class_scope:nav.NavEventRequest)
  private static final io.provlabs.flow.api.NavEventRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.provlabs.flow.api.NavEventRequest();
  }

  public static io.provlabs.flow.api.NavEventRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NavEventRequest>
      PARSER = new com.google.protobuf.AbstractParser<NavEventRequest>() {
    @java.lang.Override
    public NavEventRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new NavEventRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<NavEventRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NavEventRequest> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.provlabs.flow.api.NavEventRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

