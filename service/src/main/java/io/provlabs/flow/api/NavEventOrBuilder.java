// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nav_event.proto

package io.provlabs.flow.api;

public interface NavEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:nav.NavEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The block height where this Nav event occurred.
   * </pre>
   *
   * <code>int32 block_height = 1;</code>
   * @return The blockHeight.
   */
  int getBlockHeight();

  /**
   * <pre>
   * The block time in UNIX epoch format when the Nav event occurred.
   * </pre>
   *
   * <code>uint64 block_time = 2;</code>
   * @return The blockTime.
   */
  long getBlockTime();

  /**
   * <pre>
   * The unique chain ID representing the blockchain where this NAV event occurred.
   * </pre>
   *
   * <code>int32 chain_id = 3;</code>
   * @return The chainId.
   */
  int getChainId();

  /**
   * <pre>
   * The tx hash related to this NAV event.
   * </pre>
   *
   * <code>string tx_hash = 4;</code>
   * @return The txHash.
   */
  java.lang.String getTxHash();
  /**
   * <pre>
   * The tx hash related to this NAV event.
   * </pre>
   *
   * <code>string tx_hash = 4;</code>
   * @return The bytes for txHash.
   */
  com.google.protobuf.ByteString
      getTxHashBytes();

  /**
   * <pre>
   * The order in which this event was emitted within the block_height and tx_hash.
   * </pre>
   *
   * <code>int32 event_order = 5;</code>
   * @return The eventOrder.
   */
  int getEventOrder();

  /**
   * <pre>
   * The type of Nav event type.
   * </pre>
   *
   * <code>string event_type = 6;</code>
   * @return The eventType.
   */
  java.lang.String getEventType();
  /**
   * <pre>
   * The type of Nav event type.
   * </pre>
   *
   * <code>string event_type = 6;</code>
   * @return The bytes for eventType.
   */
  com.google.protobuf.ByteString
      getEventTypeBytes();

  /**
   * <pre>
   * The scope ID associated with this Nav.
   * </pre>
   *
   * <code>string scope_id = 7;</code>
   * @return The scopeId.
   */
  java.lang.String getScopeId();
  /**
   * <pre>
   * The scope ID associated with this Nav.
   * </pre>
   *
   * <code>string scope_id = 7;</code>
   * @return The bytes for scopeId.
   */
  com.google.protobuf.ByteString
      getScopeIdBytes();

  /**
   * <pre>
   * The token denomination for the Nav.
   * </pre>
   *
   * <code>string denom = 8;</code>
   * @return The denom.
   */
  java.lang.String getDenom();
  /**
   * <pre>
   * The token denomination for the Nav.
   * </pre>
   *
   * <code>string denom = 8;</code>
   * @return The bytes for denom.
   */
  com.google.protobuf.ByteString
      getDenomBytes();

  /**
   * <pre>
   * The price amount for the NAV.
   * </pre>
   *
   * <code>int64 price_amount = 9;</code>
   * @return The priceAmount.
   */
  long getPriceAmount();

  /**
   * <pre>
   * The denomination of the price.
   * </pre>
   *
   * <code>string price_denom = 10;</code>
   * @return The priceDenom.
   */
  java.lang.String getPriceDenom();
  /**
   * <pre>
   * The denomination of the price.
   * </pre>
   *
   * <code>string price_denom = 10;</code>
   * @return The bytes for priceDenom.
   */
  com.google.protobuf.ByteString
      getPriceDenomBytes();

  /**
   * <pre>
   * The volume of tokens involved in the Nav event.
   * </pre>
   *
   * <code>int64 volume = 11;</code>
   * @return The volume.
   */
  long getVolume();

  /**
   * <pre>
   * The source of the NAV event.
   * </pre>
   *
   * <code>string source = 12;</code>
   * @return The source.
   */
  java.lang.String getSource();
  /**
   * <pre>
   * The source of the NAV event.
   * </pre>
   *
   * <code>string source = 12;</code>
   * @return The bytes for source.
   */
  com.google.protobuf.ByteString
      getSourceBytes();
}
