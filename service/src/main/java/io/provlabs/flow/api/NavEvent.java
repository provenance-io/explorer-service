// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: nav_event.proto

package io.provlabs.flow.api;

/**
 * <pre>
 * NavEvent represents a Net Asset Value (NAV) event within a block.
 * </pre>
 *
 * Protobuf type {@code nav.NavEvent}
 */
public final class NavEvent extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:nav.NavEvent)
    NavEventOrBuilder {
private static final long serialVersionUID = 0L;
  // Use NavEvent.newBuilder() to construct.
  private NavEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NavEvent() {
    txHash_ = "";
    eventType_ = "";
    scopeId_ = "";
    denom_ = "";
    priceDenom_ = "";
    source_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new NavEvent();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private NavEvent(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            blockHeight_ = input.readInt32();
            break;
          }
          case 16: {

            blockTime_ = input.readUInt64();
            break;
          }
          case 24: {

            chainId_ = input.readInt32();
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();

            txHash_ = s;
            break;
          }
          case 40: {

            eventOrder_ = input.readInt32();
            break;
          }
          case 50: {
            java.lang.String s = input.readStringRequireUtf8();

            eventType_ = s;
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            scopeId_ = s;
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            denom_ = s;
            break;
          }
          case 72: {

            priceAmount_ = input.readInt64();
            break;
          }
          case 82: {
            java.lang.String s = input.readStringRequireUtf8();

            priceDenom_ = s;
            break;
          }
          case 88: {

            volume_ = input.readInt64();
            break;
          }
          case 98: {
            java.lang.String s = input.readStringRequireUtf8();

            source_ = s;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEvent_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEvent_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            io.provlabs.flow.api.NavEvent.class, io.provlabs.flow.api.NavEvent.Builder.class);
  }

  public static final int BLOCK_HEIGHT_FIELD_NUMBER = 1;
  private int blockHeight_;
  /**
   * <pre>
   * The block height where this Nav event occurred.
   * </pre>
   *
   * <code>int32 block_height = 1;</code>
   * @return The blockHeight.
   */
  @java.lang.Override
  public int getBlockHeight() {
    return blockHeight_;
  }

  public static final int BLOCK_TIME_FIELD_NUMBER = 2;
  private long blockTime_;
  /**
   * <pre>
   * The block time in UNIX epoch format when the Nav event occurred.
   * </pre>
   *
   * <code>uint64 block_time = 2;</code>
   * @return The blockTime.
   */
  @java.lang.Override
  public long getBlockTime() {
    return blockTime_;
  }

  public static final int CHAIN_ID_FIELD_NUMBER = 3;
  private int chainId_;
  /**
   * <pre>
   * The unique chain ID representing the blockchain where this NAV event occurred.
   * </pre>
   *
   * <code>int32 chain_id = 3;</code>
   * @return The chainId.
   */
  @java.lang.Override
  public int getChainId() {
    return chainId_;
  }

  public static final int TX_HASH_FIELD_NUMBER = 4;
  private volatile java.lang.Object txHash_;
  /**
   * <pre>
   * The tx hash related to this NAV event.
   * </pre>
   *
   * <code>string tx_hash = 4;</code>
   * @return The txHash.
   */
  @java.lang.Override
  public java.lang.String getTxHash() {
    java.lang.Object ref = txHash_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      txHash_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The tx hash related to this NAV event.
   * </pre>
   *
   * <code>string tx_hash = 4;</code>
   * @return The bytes for txHash.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getTxHashBytes() {
    java.lang.Object ref = txHash_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      txHash_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int EVENT_ORDER_FIELD_NUMBER = 5;
  private int eventOrder_;
  /**
   * <pre>
   * The order in which this event was emitted within the block_height and tx_hash.
   * </pre>
   *
   * <code>int32 event_order = 5;</code>
   * @return The eventOrder.
   */
  @java.lang.Override
  public int getEventOrder() {
    return eventOrder_;
  }

  public static final int EVENT_TYPE_FIELD_NUMBER = 6;
  private volatile java.lang.Object eventType_;
  /**
   * <pre>
   * The type of Nav event type.
   * </pre>
   *
   * <code>string event_type = 6;</code>
   * @return The eventType.
   */
  @java.lang.Override
  public java.lang.String getEventType() {
    java.lang.Object ref = eventType_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      eventType_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The type of Nav event type.
   * </pre>
   *
   * <code>string event_type = 6;</code>
   * @return The bytes for eventType.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getEventTypeBytes() {
    java.lang.Object ref = eventType_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      eventType_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SCOPE_ID_FIELD_NUMBER = 7;
  private volatile java.lang.Object scopeId_;
  /**
   * <pre>
   * The scope ID associated with this Nav.
   * </pre>
   *
   * <code>string scope_id = 7;</code>
   * @return The scopeId.
   */
  @java.lang.Override
  public java.lang.String getScopeId() {
    java.lang.Object ref = scopeId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      scopeId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The scope ID associated with this Nav.
   * </pre>
   *
   * <code>string scope_id = 7;</code>
   * @return The bytes for scopeId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getScopeIdBytes() {
    java.lang.Object ref = scopeId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      scopeId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DENOM_FIELD_NUMBER = 8;
  private volatile java.lang.Object denom_;
  /**
   * <pre>
   * The token denomination for the Nav.
   * </pre>
   *
   * <code>string denom = 8;</code>
   * @return The denom.
   */
  @java.lang.Override
  public java.lang.String getDenom() {
    java.lang.Object ref = denom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      denom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The token denomination for the Nav.
   * </pre>
   *
   * <code>string denom = 8;</code>
   * @return The bytes for denom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getDenomBytes() {
    java.lang.Object ref = denom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      denom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRICE_AMOUNT_FIELD_NUMBER = 9;
  private long priceAmount_;
  /**
   * <pre>
   * The price amount for the NAV.
   * </pre>
   *
   * <code>int64 price_amount = 9;</code>
   * @return The priceAmount.
   */
  @java.lang.Override
  public long getPriceAmount() {
    return priceAmount_;
  }

  public static final int PRICE_DENOM_FIELD_NUMBER = 10;
  private volatile java.lang.Object priceDenom_;
  /**
   * <pre>
   * The denomination of the price.
   * </pre>
   *
   * <code>string price_denom = 10;</code>
   * @return The priceDenom.
   */
  @java.lang.Override
  public java.lang.String getPriceDenom() {
    java.lang.Object ref = priceDenom_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      priceDenom_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The denomination of the price.
   * </pre>
   *
   * <code>string price_denom = 10;</code>
   * @return The bytes for priceDenom.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getPriceDenomBytes() {
    java.lang.Object ref = priceDenom_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      priceDenom_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int VOLUME_FIELD_NUMBER = 11;
  private long volume_;
  /**
   * <pre>
   * The volume of tokens involved in the Nav event.
   * </pre>
   *
   * <code>int64 volume = 11;</code>
   * @return The volume.
   */
  @java.lang.Override
  public long getVolume() {
    return volume_;
  }

  public static final int SOURCE_FIELD_NUMBER = 12;
  private volatile java.lang.Object source_;
  /**
   * <pre>
   * The source of the NAV event.
   * </pre>
   *
   * <code>string source = 12;</code>
   * @return The source.
   */
  @java.lang.Override
  public java.lang.String getSource() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      source_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * The source of the NAV event.
   * </pre>
   *
   * <code>string source = 12;</code>
   * @return The bytes for source.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSourceBytes() {
    java.lang.Object ref = source_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      source_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (blockHeight_ != 0) {
      output.writeInt32(1, blockHeight_);
    }
    if (blockTime_ != 0L) {
      output.writeUInt64(2, blockTime_);
    }
    if (chainId_ != 0) {
      output.writeInt32(3, chainId_);
    }
    if (!getTxHashBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, txHash_);
    }
    if (eventOrder_ != 0) {
      output.writeInt32(5, eventOrder_);
    }
    if (!getEventTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, eventType_);
    }
    if (!getScopeIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, scopeId_);
    }
    if (!getDenomBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, denom_);
    }
    if (priceAmount_ != 0L) {
      output.writeInt64(9, priceAmount_);
    }
    if (!getPriceDenomBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 10, priceDenom_);
    }
    if (volume_ != 0L) {
      output.writeInt64(11, volume_);
    }
    if (!getSourceBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 12, source_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (blockHeight_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, blockHeight_);
    }
    if (blockTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(2, blockTime_);
    }
    if (chainId_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, chainId_);
    }
    if (!getTxHashBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, txHash_);
    }
    if (eventOrder_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, eventOrder_);
    }
    if (!getEventTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, eventType_);
    }
    if (!getScopeIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, scopeId_);
    }
    if (!getDenomBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, denom_);
    }
    if (priceAmount_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(9, priceAmount_);
    }
    if (!getPriceDenomBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, priceDenom_);
    }
    if (volume_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(11, volume_);
    }
    if (!getSourceBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, source_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof io.provlabs.flow.api.NavEvent)) {
      return super.equals(obj);
    }
    io.provlabs.flow.api.NavEvent other = (io.provlabs.flow.api.NavEvent) obj;

    if (getBlockHeight()
        != other.getBlockHeight()) return false;
    if (getBlockTime()
        != other.getBlockTime()) return false;
    if (getChainId()
        != other.getChainId()) return false;
    if (!getTxHash()
        .equals(other.getTxHash())) return false;
    if (getEventOrder()
        != other.getEventOrder()) return false;
    if (!getEventType()
        .equals(other.getEventType())) return false;
    if (!getScopeId()
        .equals(other.getScopeId())) return false;
    if (!getDenom()
        .equals(other.getDenom())) return false;
    if (getPriceAmount()
        != other.getPriceAmount()) return false;
    if (!getPriceDenom()
        .equals(other.getPriceDenom())) return false;
    if (getVolume()
        != other.getVolume()) return false;
    if (!getSource()
        .equals(other.getSource())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BLOCK_HEIGHT_FIELD_NUMBER;
    hash = (53 * hash) + getBlockHeight();
    hash = (37 * hash) + BLOCK_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getBlockTime());
    hash = (37 * hash) + CHAIN_ID_FIELD_NUMBER;
    hash = (53 * hash) + getChainId();
    hash = (37 * hash) + TX_HASH_FIELD_NUMBER;
    hash = (53 * hash) + getTxHash().hashCode();
    hash = (37 * hash) + EVENT_ORDER_FIELD_NUMBER;
    hash = (53 * hash) + getEventOrder();
    hash = (37 * hash) + EVENT_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getEventType().hashCode();
    hash = (37 * hash) + SCOPE_ID_FIELD_NUMBER;
    hash = (53 * hash) + getScopeId().hashCode();
    hash = (37 * hash) + DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getDenom().hashCode();
    hash = (37 * hash) + PRICE_AMOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getPriceAmount());
    hash = (37 * hash) + PRICE_DENOM_FIELD_NUMBER;
    hash = (53 * hash) + getPriceDenom().hashCode();
    hash = (37 * hash) + VOLUME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getVolume());
    hash = (37 * hash) + SOURCE_FIELD_NUMBER;
    hash = (53 * hash) + getSource().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static io.provlabs.flow.api.NavEvent parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEvent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static io.provlabs.flow.api.NavEvent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static io.provlabs.flow.api.NavEvent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(io.provlabs.flow.api.NavEvent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * NavEvent represents a Net Asset Value (NAV) event within a block.
   * </pre>
   *
   * Protobuf type {@code nav.NavEvent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:nav.NavEvent)
      io.provlabs.flow.api.NavEventOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEvent_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEvent_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.provlabs.flow.api.NavEvent.class, io.provlabs.flow.api.NavEvent.Builder.class);
    }

    // Construct using io.provlabs.flow.api.NavEvent.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      blockHeight_ = 0;

      blockTime_ = 0L;

      chainId_ = 0;

      txHash_ = "";

      eventOrder_ = 0;

      eventType_ = "";

      scopeId_ = "";

      denom_ = "";

      priceAmount_ = 0L;

      priceDenom_ = "";

      volume_ = 0L;

      source_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return io.provlabs.flow.api.NavEventOuterClass.internal_static_nav_NavEvent_descriptor;
    }

    @java.lang.Override
    public io.provlabs.flow.api.NavEvent getDefaultInstanceForType() {
      return io.provlabs.flow.api.NavEvent.getDefaultInstance();
    }

    @java.lang.Override
    public io.provlabs.flow.api.NavEvent build() {
      io.provlabs.flow.api.NavEvent result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public io.provlabs.flow.api.NavEvent buildPartial() {
      io.provlabs.flow.api.NavEvent result = new io.provlabs.flow.api.NavEvent(this);
      result.blockHeight_ = blockHeight_;
      result.blockTime_ = blockTime_;
      result.chainId_ = chainId_;
      result.txHash_ = txHash_;
      result.eventOrder_ = eventOrder_;
      result.eventType_ = eventType_;
      result.scopeId_ = scopeId_;
      result.denom_ = denom_;
      result.priceAmount_ = priceAmount_;
      result.priceDenom_ = priceDenom_;
      result.volume_ = volume_;
      result.source_ = source_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof io.provlabs.flow.api.NavEvent) {
        return mergeFrom((io.provlabs.flow.api.NavEvent)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(io.provlabs.flow.api.NavEvent other) {
      if (other == io.provlabs.flow.api.NavEvent.getDefaultInstance()) return this;
      if (other.getBlockHeight() != 0) {
        setBlockHeight(other.getBlockHeight());
      }
      if (other.getBlockTime() != 0L) {
        setBlockTime(other.getBlockTime());
      }
      if (other.getChainId() != 0) {
        setChainId(other.getChainId());
      }
      if (!other.getTxHash().isEmpty()) {
        txHash_ = other.txHash_;
        onChanged();
      }
      if (other.getEventOrder() != 0) {
        setEventOrder(other.getEventOrder());
      }
      if (!other.getEventType().isEmpty()) {
        eventType_ = other.eventType_;
        onChanged();
      }
      if (!other.getScopeId().isEmpty()) {
        scopeId_ = other.scopeId_;
        onChanged();
      }
      if (!other.getDenom().isEmpty()) {
        denom_ = other.denom_;
        onChanged();
      }
      if (other.getPriceAmount() != 0L) {
        setPriceAmount(other.getPriceAmount());
      }
      if (!other.getPriceDenom().isEmpty()) {
        priceDenom_ = other.priceDenom_;
        onChanged();
      }
      if (other.getVolume() != 0L) {
        setVolume(other.getVolume());
      }
      if (!other.getSource().isEmpty()) {
        source_ = other.source_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      io.provlabs.flow.api.NavEvent parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (io.provlabs.flow.api.NavEvent) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int blockHeight_ ;
    /**
     * <pre>
     * The block height where this Nav event occurred.
     * </pre>
     *
     * <code>int32 block_height = 1;</code>
     * @return The blockHeight.
     */
    @java.lang.Override
    public int getBlockHeight() {
      return blockHeight_;
    }
    /**
     * <pre>
     * The block height where this Nav event occurred.
     * </pre>
     *
     * <code>int32 block_height = 1;</code>
     * @param value The blockHeight to set.
     * @return This builder for chaining.
     */
    public Builder setBlockHeight(int value) {
      
      blockHeight_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The block height where this Nav event occurred.
     * </pre>
     *
     * <code>int32 block_height = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlockHeight() {
      
      blockHeight_ = 0;
      onChanged();
      return this;
    }

    private long blockTime_ ;
    /**
     * <pre>
     * The block time in UNIX epoch format when the Nav event occurred.
     * </pre>
     *
     * <code>uint64 block_time = 2;</code>
     * @return The blockTime.
     */
    @java.lang.Override
    public long getBlockTime() {
      return blockTime_;
    }
    /**
     * <pre>
     * The block time in UNIX epoch format when the Nav event occurred.
     * </pre>
     *
     * <code>uint64 block_time = 2;</code>
     * @param value The blockTime to set.
     * @return This builder for chaining.
     */
    public Builder setBlockTime(long value) {
      
      blockTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The block time in UNIX epoch format when the Nav event occurred.
     * </pre>
     *
     * <code>uint64 block_time = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlockTime() {
      
      blockTime_ = 0L;
      onChanged();
      return this;
    }

    private int chainId_ ;
    /**
     * <pre>
     * The unique chain ID representing the blockchain where this NAV event occurred.
     * </pre>
     *
     * <code>int32 chain_id = 3;</code>
     * @return The chainId.
     */
    @java.lang.Override
    public int getChainId() {
      return chainId_;
    }
    /**
     * <pre>
     * The unique chain ID representing the blockchain where this NAV event occurred.
     * </pre>
     *
     * <code>int32 chain_id = 3;</code>
     * @param value The chainId to set.
     * @return This builder for chaining.
     */
    public Builder setChainId(int value) {
      
      chainId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The unique chain ID representing the blockchain where this NAV event occurred.
     * </pre>
     *
     * <code>int32 chain_id = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearChainId() {
      
      chainId_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object txHash_ = "";
    /**
     * <pre>
     * The tx hash related to this NAV event.
     * </pre>
     *
     * <code>string tx_hash = 4;</code>
     * @return The txHash.
     */
    public java.lang.String getTxHash() {
      java.lang.Object ref = txHash_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        txHash_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The tx hash related to this NAV event.
     * </pre>
     *
     * <code>string tx_hash = 4;</code>
     * @return The bytes for txHash.
     */
    public com.google.protobuf.ByteString
        getTxHashBytes() {
      java.lang.Object ref = txHash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        txHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The tx hash related to this NAV event.
     * </pre>
     *
     * <code>string tx_hash = 4;</code>
     * @param value The txHash to set.
     * @return This builder for chaining.
     */
    public Builder setTxHash(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      txHash_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The tx hash related to this NAV event.
     * </pre>
     *
     * <code>string tx_hash = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTxHash() {
      
      txHash_ = getDefaultInstance().getTxHash();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The tx hash related to this NAV event.
     * </pre>
     *
     * <code>string tx_hash = 4;</code>
     * @param value The bytes for txHash to set.
     * @return This builder for chaining.
     */
    public Builder setTxHashBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      txHash_ = value;
      onChanged();
      return this;
    }

    private int eventOrder_ ;
    /**
     * <pre>
     * The order in which this event was emitted within the block_height and tx_hash.
     * </pre>
     *
     * <code>int32 event_order = 5;</code>
     * @return The eventOrder.
     */
    @java.lang.Override
    public int getEventOrder() {
      return eventOrder_;
    }
    /**
     * <pre>
     * The order in which this event was emitted within the block_height and tx_hash.
     * </pre>
     *
     * <code>int32 event_order = 5;</code>
     * @param value The eventOrder to set.
     * @return This builder for chaining.
     */
    public Builder setEventOrder(int value) {
      
      eventOrder_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The order in which this event was emitted within the block_height and tx_hash.
     * </pre>
     *
     * <code>int32 event_order = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearEventOrder() {
      
      eventOrder_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object eventType_ = "";
    /**
     * <pre>
     * The type of Nav event type.
     * </pre>
     *
     * <code>string event_type = 6;</code>
     * @return The eventType.
     */
    public java.lang.String getEventType() {
      java.lang.Object ref = eventType_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        eventType_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The type of Nav event type.
     * </pre>
     *
     * <code>string event_type = 6;</code>
     * @return The bytes for eventType.
     */
    public com.google.protobuf.ByteString
        getEventTypeBytes() {
      java.lang.Object ref = eventType_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        eventType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The type of Nav event type.
     * </pre>
     *
     * <code>string event_type = 6;</code>
     * @param value The eventType to set.
     * @return This builder for chaining.
     */
    public Builder setEventType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      eventType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of Nav event type.
     * </pre>
     *
     * <code>string event_type = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearEventType() {
      
      eventType_ = getDefaultInstance().getEventType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The type of Nav event type.
     * </pre>
     *
     * <code>string event_type = 6;</code>
     * @param value The bytes for eventType to set.
     * @return This builder for chaining.
     */
    public Builder setEventTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      eventType_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object scopeId_ = "";
    /**
     * <pre>
     * The scope ID associated with this Nav.
     * </pre>
     *
     * <code>string scope_id = 7;</code>
     * @return The scopeId.
     */
    public java.lang.String getScopeId() {
      java.lang.Object ref = scopeId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        scopeId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The scope ID associated with this Nav.
     * </pre>
     *
     * <code>string scope_id = 7;</code>
     * @return The bytes for scopeId.
     */
    public com.google.protobuf.ByteString
        getScopeIdBytes() {
      java.lang.Object ref = scopeId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        scopeId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The scope ID associated with this Nav.
     * </pre>
     *
     * <code>string scope_id = 7;</code>
     * @param value The scopeId to set.
     * @return This builder for chaining.
     */
    public Builder setScopeId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      scopeId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The scope ID associated with this Nav.
     * </pre>
     *
     * <code>string scope_id = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearScopeId() {
      
      scopeId_ = getDefaultInstance().getScopeId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The scope ID associated with this Nav.
     * </pre>
     *
     * <code>string scope_id = 7;</code>
     * @param value The bytes for scopeId to set.
     * @return This builder for chaining.
     */
    public Builder setScopeIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      scopeId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object denom_ = "";
    /**
     * <pre>
     * The token denomination for the Nav.
     * </pre>
     *
     * <code>string denom = 8;</code>
     * @return The denom.
     */
    public java.lang.String getDenom() {
      java.lang.Object ref = denom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        denom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The token denomination for the Nav.
     * </pre>
     *
     * <code>string denom = 8;</code>
     * @return The bytes for denom.
     */
    public com.google.protobuf.ByteString
        getDenomBytes() {
      java.lang.Object ref = denom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        denom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The token denomination for the Nav.
     * </pre>
     *
     * <code>string denom = 8;</code>
     * @param value The denom to set.
     * @return This builder for chaining.
     */
    public Builder setDenom(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      denom_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The token denomination for the Nav.
     * </pre>
     *
     * <code>string denom = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearDenom() {
      
      denom_ = getDefaultInstance().getDenom();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The token denomination for the Nav.
     * </pre>
     *
     * <code>string denom = 8;</code>
     * @param value The bytes for denom to set.
     * @return This builder for chaining.
     */
    public Builder setDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      denom_ = value;
      onChanged();
      return this;
    }

    private long priceAmount_ ;
    /**
     * <pre>
     * The price amount for the NAV.
     * </pre>
     *
     * <code>int64 price_amount = 9;</code>
     * @return The priceAmount.
     */
    @java.lang.Override
    public long getPriceAmount() {
      return priceAmount_;
    }
    /**
     * <pre>
     * The price amount for the NAV.
     * </pre>
     *
     * <code>int64 price_amount = 9;</code>
     * @param value The priceAmount to set.
     * @return This builder for chaining.
     */
    public Builder setPriceAmount(long value) {
      
      priceAmount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The price amount for the NAV.
     * </pre>
     *
     * <code>int64 price_amount = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearPriceAmount() {
      
      priceAmount_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object priceDenom_ = "";
    /**
     * <pre>
     * The denomination of the price.
     * </pre>
     *
     * <code>string price_denom = 10;</code>
     * @return The priceDenom.
     */
    public java.lang.String getPriceDenom() {
      java.lang.Object ref = priceDenom_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        priceDenom_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The denomination of the price.
     * </pre>
     *
     * <code>string price_denom = 10;</code>
     * @return The bytes for priceDenom.
     */
    public com.google.protobuf.ByteString
        getPriceDenomBytes() {
      java.lang.Object ref = priceDenom_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        priceDenom_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The denomination of the price.
     * </pre>
     *
     * <code>string price_denom = 10;</code>
     * @param value The priceDenom to set.
     * @return This builder for chaining.
     */
    public Builder setPriceDenom(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      priceDenom_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The denomination of the price.
     * </pre>
     *
     * <code>string price_denom = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearPriceDenom() {
      
      priceDenom_ = getDefaultInstance().getPriceDenom();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The denomination of the price.
     * </pre>
     *
     * <code>string price_denom = 10;</code>
     * @param value The bytes for priceDenom to set.
     * @return This builder for chaining.
     */
    public Builder setPriceDenomBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      priceDenom_ = value;
      onChanged();
      return this;
    }

    private long volume_ ;
    /**
     * <pre>
     * The volume of tokens involved in the Nav event.
     * </pre>
     *
     * <code>int64 volume = 11;</code>
     * @return The volume.
     */
    @java.lang.Override
    public long getVolume() {
      return volume_;
    }
    /**
     * <pre>
     * The volume of tokens involved in the Nav event.
     * </pre>
     *
     * <code>int64 volume = 11;</code>
     * @param value The volume to set.
     * @return This builder for chaining.
     */
    public Builder setVolume(long value) {
      
      volume_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The volume of tokens involved in the Nav event.
     * </pre>
     *
     * <code>int64 volume = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearVolume() {
      
      volume_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object source_ = "";
    /**
     * <pre>
     * The source of the NAV event.
     * </pre>
     *
     * <code>string source = 12;</code>
     * @return The source.
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * The source of the NAV event.
     * </pre>
     *
     * <code>string source = 12;</code>
     * @return The bytes for source.
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * The source of the NAV event.
     * </pre>
     *
     * <code>string source = 12;</code>
     * @param value The source to set.
     * @return This builder for chaining.
     */
    public Builder setSource(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      source_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The source of the NAV event.
     * </pre>
     *
     * <code>string source = 12;</code>
     * @return This builder for chaining.
     */
    public Builder clearSource() {
      
      source_ = getDefaultInstance().getSource();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The source of the NAV event.
     * </pre>
     *
     * <code>string source = 12;</code>
     * @param value The bytes for source to set.
     * @return This builder for chaining.
     */
    public Builder setSourceBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      source_ = value;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:nav.NavEvent)
  }

  // @@protoc_insertion_point(class_scope:nav.NavEvent)
  private static final io.provlabs.flow.api.NavEvent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new io.provlabs.flow.api.NavEvent();
  }

  public static io.provlabs.flow.api.NavEvent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NavEvent>
      PARSER = new com.google.protobuf.AbstractParser<NavEvent>() {
    @java.lang.Override
    public NavEvent parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new NavEvent(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<NavEvent> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NavEvent> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public io.provlabs.flow.api.NavEvent getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

